[{"uri":"/Example.fsdocs.2022A/index.html","title":"index","content":"This is my page. My name is Bob.\r\n\r\nfa lalalalal lalalalal\r\n"},{"uri":"/Example.fsdocs.2022A/test.html","title":"test","content":"(**\n## This is my page\n*)\n\n#load \u0022YahooFinance.fsx\u0022\n\nopen YahooFinance\n\nlet twnk = YahooFinance.PriceHistory(\u0022TWNK\u0022)\n\ntwnk\n|\u003E List.take 3\n\n#r \u0022nuget: Plotly.NET,2.0.0-preview.17\u0022\n\nopen Plotly.NET\n\ntwnk\n|\u003E List.map (fun day -\u003E day.Date, day.AdjustedClose)\n|\u003E Chart.Line\n|\u003E GenericChart.toChartHTML\n\n(***include-it-raw***)\n\nlet list = [ 1; 2; 3; 4]\n\nlist\n\n(***include-it***)"},{"uri":"/Example.fsdocs.2022A/test2.html","title":"test2","content":"(**\nThis is my second file.\n*)"},{"uri":"/Example.fsdocs.2022A/test3.html","title":"test3","content":""},{"uri":"/Example.fsdocs.2022A/YahooFinance.html","title":"YahooFinance","content":"(**\n[![Script](img/badge-script.svg)](/Teaching//YahooFinance.fsx)\n\nBased on code from [https://github.com/aexsalomao/YahooFinance/](https://github.com/aexsalomao/YahooFinance/)\n\n*)\n#r \u0022nuget: FSharp.Data\u0022\n\nopen System\nopen FSharp.Data\n\ntype Interval = \n    | Daily\n    | Weekly\n    | Monthly\n    override this.ToString() = \n        match this with\n        | Daily -\u003E \u00221d\u0022\n        | Weekly -\u003E \u00221wk\u0022\n        | Monthly -\u003E \u00221mo\u0022\n\ntype PriceObs = \n    { Symbol : string\n      Date : DateTime\n      Open : float\n      High : float\n      Low : float\n      Close : float\n      AdjustedClose : float\n      Volume : float }\n\ntype private PriceObsCsv = CsvProvider\u003CSample=\u0022Date (date),Open (float),High (float),Low (float), Close (float),AdjClose (float),Volume (float)\u0022\u003E\nlet private cc = System.Net.CookieContainer()\n\ntype YahooFinance =\n    static member PriceHistory(symbol: string,?startDate: DateTime,?endDate: DateTime,?interval: Interval) =\n        let startDate = defaultArg startDate (DateTime.Now.AddYears(-1))\n        let endDate = defaultArg endDate (DateTime.Now)\n        let interval = defaultArg interval Interval.Monthly\n\n        let generateYahooUrl (symbol: string) (startDate: DateTime) (endDate: DateTime) (interval: Interval) =\n            let time dt = DateTimeOffset(dt).ToUnixTimeSeconds()\n            $\u0022https://query1.finance.yahoo.com/v7/finance/download/{symbol}?\u0022 \u002B\n            $\u0022period1={time startDate}\u0026period2={time endDate}\u0026interval={interval}\u0022 \u002B\n            $\u0022\u0026events=history\u0026includeAdjustedClose=true\u0022\n        \n        let url = generateYahooUrl symbol startDate endDate interval\n        let req = Http.RequestString(\n                        url = url, \n                        httpMethod = \u0022GET\u0022,\n                        query = [\u0022format\u0022,\u0022csv\u0022],\n                        headers = [HttpRequestHeaders.Accept HttpContentTypes.Csv],\n                        silentHttpErrors = false,\n                        cookieContainer = cc)\n        PriceObsCsv.Parse(req).Rows\n        |\u003E Seq.map (fun x -\u003E \n            { Symbol = symbol \n              Date = x.Date\n              Open = x.Open\n              High = x.High\n              Low = x.Low\n              Close = x.Close \n              AdjustedClose = x.AdjClose\n              Volume = x.Volume })\n        |\u003E Seq.toList\n"}]